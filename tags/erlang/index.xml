<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>erlang on Nukus Blog</title>
    <link>https://nayibor.github.io/tags/erlang/</link>
    <description>Recent content in erlang on Nukus Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>nayibor@gmail.com (Nuku Ameyibor)</managingEditor>
    <webMaster>nayibor@gmail.com (Nuku Ameyibor)</webMaster>
    <lastBuildDate>Mon, 22 Jan 2024 15:05:45 +0000</lastBuildDate>
    <atom:link href="https://nayibor.github.io/tags/erlang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using iso8583_erl Erlang Library</title>
      <link>https://nayibor.github.io/posts/using-iso8583_erl-library/</link>
      <pubDate>Mon, 22 Jan 2024 15:05:45 +0000</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/using-iso8583_erl-library/</guid>
      <description>i have been working on an iso8583 library and decided to write a post about it.&#xA;I have also used the library in three projects over the years so code is production ready and battle tested.&#xA;iso8583 is a payment card messaging protocol and in some ways a dsl for describing how to send and receive payment card transactions from a sender to a receiver.&#xA;the sender can be an atm,pos device,website,application,etc.</description>
    </item>
    <item>
      <title>Erlang Binary Pattern Matching</title>
      <link>https://nayibor.github.io/posts/0b6a4bece0b54c9c4aed38228bf8ff8d/</link>
      <pubDate>Tue, 03 Jan 2023 10:54:24 +0200</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/0b6a4bece0b54c9c4aed38228bf8ff8d/</guid>
      <description>hello everyone and happy new year to one and all!!. hope everyone had a very wondeful holiday filled with joy,happiness and wishing more positive happenings in this year.&#xA;i worked on a small bit of code late last year which involved working with some audio data where i had to do some bit syntax and bit manipulation to get the various metadata and parts of an audio file either over the network being streamed or a file on disk</description>
    </item>
    <item>
      <title>Library for parsing iso8583 messages in erlang</title>
      <link>https://nayibor.github.io/posts/c33083b29ef6e62daebc9459653f84b9/</link>
      <pubDate>Mon, 01 Jun 2020 00:54:24 +0200</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/c33083b29ef6e62daebc9459653f84b9/</guid>
      <description>i have been working on an iso8583 payment card parsing library for time.&#xA;its written in erlang but can be used in erlang,elixir,lfe,etc.. basically all beam languages. this library can be used for packing and unpacking iso8583 financial messages.&#xA;It accepts a specification file which contains info about fields,mti,bitmap for your messages. The specification has info such as header length for various fields,padding info for fields,etc&amp;hellip; This specification information is then used for packing/unpacking iso8583 formatted payment card messages.</description>
    </item>
    <item>
      <title>Programming languages as web template languages</title>
      <link>https://nayibor.github.io/posts/0cbce1a3a305b158373f04c7e4c579dc/</link>
      <pubDate>Sun, 09 Apr 2017 20:52:24 +0200</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/0cbce1a3a305b158373f04c7e4c579dc/</guid>
      <description>Web templating languages!!. Don&amp;rsquo;t we love em.&#xA;Every one has their favourite but a common denominator among them all is that they make our work as web developers easier by giving us separation of concerns between data and content as well as lots of other advantages. A fancy term for web templating languages is a web template system.&#xA;From Wikipedia a Web template system is defined as&#xA;A web template system uses a template processor to combine web templates to form finished web pages, possibly using some data source to customize the pages or present a large amount of content on similar-looking pages</description>
    </item>
    <item>
      <title>Parsing iso8583 messages Part 2</title>
      <link>https://nayibor.github.io/posts/4948d52595d68beab6dd3a919db6d115/</link>
      <pubDate>Thu, 22 Dec 2016 10:54:24 +0200</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/4948d52595d68beab6dd3a919db6d115/</guid>
      <description>Today we will be showing how to extract the various components out of an iso string. The combination of a tcp server as well as code to extract the iso message components and send it for further processing is what is popularly called an interface server in payment processing . Specifically the components we are interested in are&#xA;message type indicator also known as mti bitmap data elements The code snippets used for this post is in this git repository.</description>
    </item>
    <item>
      <title>Parsing iso8583 messages Part 1</title>
      <link>https://nayibor.github.io/posts/73e0ec2ac943bfecb47acbe2e603f814/</link>
      <pubDate>Mon, 12 Dec 2016 07:57:26 +0000</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/73e0ec2ac943bfecb47acbe2e603f814/</guid>
      <description>Today we are going to talk about creating a tcp server to parse iso messages using erlang .&#xA;This tutorial explains the very basic of creating tcp servers in erlang . there are better specialized libraries out there (ranch) for creating tcp servers and pools of them but this is very basic and we need just a simple tcp server to show how to process incoming iso messages .Â We will be using the 1993 iso8583 ascii protocol format.</description>
    </item>
  </channel>
</rss>
