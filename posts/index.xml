<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Nukus Blog</title>
    <link>https://nayibor.github.io/posts/</link>
    <description>Recent content in Posts on Nukus Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <managingEditor>nayibor@gmail.com (Nuku Ameyibor)</managingEditor>
    <webMaster>nayibor@gmail.com (Nuku Ameyibor)</webMaster>
    <lastBuildDate>Thu, 22 May 2025 13:42:45 +0000</lastBuildDate>
    <atom:link href="https://nayibor.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Typst Reporting Application</title>
      <link>https://nayibor.github.io/posts/typst_report_application/</link>
      <pubDate>Thu, 22 May 2025 13:42:45 +0000</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/typst_report_application/</guid>
      <description>&lt;p&gt;Hi All.hope you are good.&lt;/p&gt;&#xA;&lt;p&gt;I blogged in a previous post about &lt;a href=&#34;https://typst.app&#34;&gt;Typst&lt;/a&gt; which is a document processing application which outputs to pdf,images and other formats.&lt;/p&gt;&#xA;&lt;p&gt;Typst makes it easy to create documents like scientific journals,books,etc.. and other forms of writing.&#xA;From a software development perspective,the programming language used to create(rust) makes it quite fast and less buggy and ideal for creating reports,receipts,etc&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;I used the typst application and some typst packages in a recent software project using the elixir programming language.&#xA;It revolved around having a reporting functionality using typst where i could write custom sql queries and have the reporting engine create pdfs out of those sql queries.&#xA;The experience was nice and I decided to create a custom elixir application which i can embed in other elixir projects for easy reporting functionality.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Typst In Elixir</title>
      <link>https://nayibor.github.io/posts/using-typist-elixir/</link>
      <pubDate>Wed, 05 Mar 2025 12:22:49 +0000</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/using-typist-elixir/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://typst.app&#34;&gt;Typst&lt;/a&gt; is an application which is used for creating pdf and images from typst files.&#xA;Typst has a custom templating syntax which it uses for constructing various page elements and it also has a scripting system  much like a programming language which enables you to do some really cool stuff.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s written in rust which makes it quite performant and gives it some type safe guarantees.it has a packaging system which enables you to import other packages written by others into your typst project.it is also multiplatform as well.its similar to latex in what it does and its functionality.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using iso8583_erl Erlang Library</title>
      <link>https://nayibor.github.io/posts/using-iso8583_erl-library/</link>
      <pubDate>Mon, 22 Jan 2024 15:05:45 +0000</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/using-iso8583_erl-library/</guid>
      <description>&lt;p&gt;i have been working on an iso8583 &lt;a href=&#34;https://github.com/nayibor/iso8583_erl&#34;&gt;library&lt;/a&gt; and decided to write a post about it.&lt;/p&gt;&#xA;&lt;p&gt;I have also used the library in three projects over the years so code is production ready and battle tested.&lt;/p&gt;&#xA;&lt;p&gt;iso8583 is a payment card messaging protocol and in some ways a dsl for describing how to send and receive payment card transactions from a sender to a receiver.&lt;/p&gt;&#xA;&lt;p&gt;the sender can be an atm,pos device,website,application,etc.. and the receiver an application,card processor like visa,mastercard etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Coding In Elm-lang</title>
      <link>https://nayibor.github.io/posts/a7d70805678f89e1f89430c3237d0b1a/</link>
      <pubDate>Fri, 12 May 2023 10:54:24 +0200</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/a7d70805678f89e1f89430c3237d0b1a/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Hi All.Hope you are all good.&lt;/p&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Recently i had the chance to rewrite some sections of code i had written in javascript over to elm and wanted to share my experience with it.&lt;/p&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;I had been experiencing an issue where a web dashboard which was being used for monitoring of a service was receiving information too quickly thus&#xA;causing the dashboard to become unresponsive.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Erlang Binary Pattern Matching</title>
      <link>https://nayibor.github.io/posts/0b6a4bece0b54c9c4aed38228bf8ff8d/</link>
      <pubDate>Tue, 03 Jan 2023 10:54:24 +0200</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/0b6a4bece0b54c9c4aed38228bf8ff8d/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;hello everyone and happy new year to one and all!!.&#xA;&lt;!-- raw HTML omitted --&gt;hope everyone had a very wondeful holiday filled with joy,happiness and wishing more positive happenings in this year.&lt;/p&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;i worked on a small bit of code late last year which involved working with some audio data where i had to do some bit syntax and bit manipulation to get&#xA;the various metadata and parts of an audio file either over the network being streamed or a file on disk&lt;/p&gt;</description>
    </item>
    <item>
      <title>Talking to outside world from Elixir</title>
      <link>https://nayibor.github.io/posts/meetup-talk/</link>
      <pubDate>Mon, 04 Oct 2021 10:54:24 +0200</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/meetup-talk/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;I gave a talk recently at Elixir Kenya about how to communicate with the outside world from elixir.&#xA;&lt;!-- raw HTML omitted --&gt;The ecosystem for talking to the outside world from beam systems has a lot of options.&#xA;&lt;!-- raw HTML omitted --&gt;Beyond the ports,nifs,interfaces,distributed erlang i found a new language ziglang.&#xA;&lt;!-- raw HTML omitted --&gt;ziglang was interesting not only for creating nifs&#xA;&lt;!-- raw HTML omitted --&gt;but also as a possible future replacement for writing simple,fast,safe code&#xA;&lt;!-- raw HTML omitted --&gt;This is the talk as well as a video about why to use zig to write nifs&#xA;&lt;!-- raw HTML omitted --&gt;enjoy !!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Conference and Community Building</title>
      <link>https://nayibor.github.io/posts/conference-experience-and-starting-a-community/</link>
      <pubDate>Fri, 04 Jun 2021 10:54:24 +0200</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/conference-experience-and-starting-a-community/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Conferences/communities are a great way for everyone to network and learn something new.&#xA;&lt;!-- raw HTML omitted --&gt;the effect of the pandemic on how these events are organized has been interesting.&#xA;&lt;!-- raw HTML omitted --&gt;its made people have to innovate around the organization of events.&#xA;&lt;!-- raw HTML omitted --&gt;there have been some positives out of this as well as some negatives&#xA;&lt;!-- raw HTML omitted --&gt;i have attended three erlang/elixir online conferences(two of my best languages)  so far this year and its been interesting&#xA;&lt;!-- raw HTML omitted --&gt;the positives/negatives as well as what the future may bring&lt;/p&gt;</description>
    </item>
    <item>
      <title>Library for parsing iso8583 messages in erlang</title>
      <link>https://nayibor.github.io/posts/c33083b29ef6e62daebc9459653f84b9/</link>
      <pubDate>Mon, 01 Jun 2020 00:54:24 +0200</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/c33083b29ef6e62daebc9459653f84b9/</guid>
      <description>&lt;p&gt;i have been working on  an iso8583 payment card parsing library for time.&lt;/p&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;its written in erlang but can be used in erlang,elixir,lfe,etc.. basically all beam languages.&#xA;&lt;!-- raw HTML omitted --&gt;this library can be used for packing and unpacking iso8583 financial messages.&lt;/p&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;It accepts a specification file which contains info about fields,mti,bitmap for your messages.&#xA;&lt;!-- raw HTML omitted --&gt;The specification has info such as header length for various fields,padding info for fields,etc&amp;hellip;&#xA;&lt;!-- raw HTML omitted --&gt;This specification information is then used for packing/unpacking iso8583 formatted payment card messages.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploying code with git and apache</title>
      <link>https://nayibor.github.io/posts/deploying-code-with-git-and-apache/</link>
      <pubDate>Tue, 25 Apr 2017 10:54:24 +0200</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/deploying-code-with-git-and-apache/</guid>
      <description>&lt;p&gt;Today we are going to talk about how to deploy our code to our testing server or production server using git/apache.&#xA;In this scenario git will be taking the place of the tradional method of using ftp servers to upload code to a server.&lt;/p&gt;&#xA;&lt;p&gt;We will get to know how to&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;configure a remote git repository so it checks out data to a web root location&lt;/li&gt;&#xA;&lt;li&gt;configure apache and create an apache conf file that will enable communication between the git repository and apache&lt;/li&gt;&#xA;&lt;li&gt;setup authenticaton in apache for git events&lt;/li&gt;&#xA;&lt;li&gt;push to remote repository and see files in web root&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s hit the road!!!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programming languages as web template languages</title>
      <link>https://nayibor.github.io/posts/0cbce1a3a305b158373f04c7e4c579dc/</link>
      <pubDate>Sun, 09 Apr 2017 20:52:24 +0200</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/0cbce1a3a305b158373f04c7e4c579dc/</guid>
      <description>&lt;p&gt;Web templating languages!!. Don&amp;rsquo;t we love em.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://nayibor.github.io/images/underscore.png&#34; alt=&#34;underscore&#34;&gt;&#xA;&lt;img src=&#34;https://nayibor.github.io/images/handlebars_logo.png&#34; alt=&#34;handlerbars&#34;&gt;&#xA;&lt;img src=&#34;https://nayibor.github.io/images/mustache.png&#34; alt=&#34;mustache&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Every one has their favourite but a common denominator among them all is that they make our work as web developers&#xA;easier by giving us separation of concerns between data and content as well as lots of other &lt;a href=&#34;https://en.wikipedia.org/wiki/Web_template_system#Motivations_and_typical_uses&#34;&gt;advantages&lt;/a&gt;.&#xA;A fancy term for web templating languages is a web template system.&lt;/p&gt;&#xA;&lt;p&gt;From Wikipedia a &lt;a href=&#34;https://en.wikipedia.org/wiki/Web_template_system&#34;&gt;Web template system&lt;/a&gt; is defined as&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;A web template system uses a template processor to combine web templates to form finished web pages,&#xA;possibly using some data source to customize the pages or present a large amount of content on similar-looking pages&lt;/p&gt;</description>
    </item>
    <item>
      <title>Parsing iso8583 messages Part 2</title>
      <link>https://nayibor.github.io/posts/4948d52595d68beab6dd3a919db6d115/</link>
      <pubDate>Thu, 22 Dec 2016 10:54:24 +0200</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/4948d52595d68beab6dd3a919db6d115/</guid>
      <description>&lt;p&gt;Today we will be showing how to  extract the various components out of an iso string.&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;The combination of a tcp server as well as code to extract the  iso message components&#xA;and send it for further processing is what is popularly called an interface server in payment processing .&#xA;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;&#xA;&lt;p&gt;Specifically the components we are interested in are&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;message type indicator also known as mti&lt;/li&gt;&#xA;&lt;li&gt;bitmap&lt;/li&gt;&#xA;&lt;li&gt;data elements&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The code snippets  used for this post is in this  &lt;a href=&#34;https://github.com/nayibor/iso_process_tut_repo.git&#34;&gt;git&lt;/a&gt; repository.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Parsing iso8583 messages Part 1</title>
      <link>https://nayibor.github.io/posts/73e0ec2ac943bfecb47acbe2e603f814/</link>
      <pubDate>Mon, 12 Dec 2016 07:57:26 +0000</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/73e0ec2ac943bfecb47acbe2e603f814/</guid>
      <description>&lt;p&gt;Today we are going to talk about creating a tcp server to  parse iso messages using erlang .&lt;/p&gt;&#xA;&lt;p&gt;This tutorial explains the very basic of creating tcp servers in erlang .&#xA;there are better specialized  libraries out there (&lt;!-- raw HTML omitted --&gt;ranch&lt;!-- raw HTML omitted --&gt;) for creating tcp servers and pools of them but this is very basic and we need just a simple tcp server to show how to process incoming iso messages . &lt;/p&gt;</description>
    </item>
    <item>
      <title>Iso8583  message structure</title>
      <link>https://nayibor.github.io/posts/ddf349de5c9c5cf29af2e17bc71724b8/</link>
      <pubDate>Mon, 05 Dec 2016 07:55:57 +0000</pubDate><author>nayibor@gmail.com (Nuku Ameyibor)</author>
      <guid>https://nayibor.github.io/posts/ddf349de5c9c5cf29af2e17bc71724b8/</guid>
      <description>&lt;p&gt;alloha.&lt;/p&gt;&#xA;&lt;p&gt;at last i have been able to get my lazy behind to write a blog post on this.&lt;/p&gt;&#xA;&lt;p&gt;About time :).&lt;/p&gt;&#xA;&lt;p&gt;This will be the first in a series about parsing iso8583 financial messages  using erlang.&lt;/p&gt;&#xA;&lt;p&gt;we will get to know&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;about iso8583 and the message structure&lt;/li&gt;&#xA;&lt;li&gt;receiving iso 8583 messages over the wire using erlang tcp server&lt;/li&gt;&#xA;&lt;li&gt;and parsing the message . &lt;!-- raw HTML omitted --&gt;parsing those messages in various formats(text(acii),binary,custom format).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Here we go.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
